.modal-carousel {
	top: 0;
	left: 0;
	width: 900px; /* largeur fixe, adapte selon ton design */
	height: 400px; /* hauteur fixe */
	max-width: 90vw; /* responsive : pas plus large que 90% de la largeur viewport */
	max-height: 80vh; /* responsive : pas plus haute que 80% de la hauteur viewport */
	background: #50a2a7;
	display: flex;
	flex-direction: column;
	/* justify-content: center;  <- on retire pour que contenu prenne l’espace */
	align-items: center;
	padding: 2rem;
	box-sizing: border-box;
	font-family: "Clash Display", sans-serif;
	margin-top: 160px;
	margin-bottom: 100px;
	border-radius: 5px;
	position: relative;

	.modal-content {
		max-width: 600px;
		text-align: center;
		margin-bottom: 2rem;

		flex: 1; /* prend tout l’espace vertical restant */
		overflow-y: auto; /* scroll si contenu dépasse la hauteur */

		h1 {
			font-size: 3rem;
			margin-bottom: 1rem;
			font-weight: 700;
			letter-spacing: 0.05em;
		}

		p {
			font-size: 1.5rem;
			line-height: 1.6;
		}
	}

	.modal-controls {
		flex-shrink: 0; /* empêche de réduire cette partie */
		display: flex;
		align-items: center;
		gap: 6.5rem;

		/* On enlève l’ancien style bouton pour utiliser ton bouton animé */
		button {
			all: unset; /* reset complet pour éviter conflits */
			cursor: pointer;
			position: relative;
			width: 56px;
			height: 56px;
			overflow: hidden;
			background-color: transparent;

			&:focus-visible {
				outline: 2px solid #61dafb;
				outline-offset: 2px;
			}
		}

		/* Ici, tu peux copier ton CSS de .button, .button:before, .button:after etc. */
		/* Pour rappel, voici l’essentiel à mettre dans ton fichier SCSS global ou ici: */
		.button {
			display: block;
			position: relative;
			width: 56px;
			height: 56px;
			margin: 0;
			overflow: hidden;
			outline: none;
			background-color: transparent;
			cursor: pointer;
			border: 0;
		}

		.button:before,
		.button:after {
			content: "";
			position: absolute;
			border-radius: 50%;
			inset: 7px;
		}

		.button:before {
			border: 4px solid #f0eeef;
			transition: opacity 0.4s cubic-bezier(0.77, 0, 0.175, 1) 80ms,
				transform 0.5s cubic-bezier(0.455, 0.03, 0.515, 0.955) 80ms;
		}

		.button:after {
			border: 4px solid #96daf0;
			transform: scale(1.3);
			transition: opacity 0.4s cubic-bezier(0.165, 0.84, 0.44, 1),
				transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
			opacity: 0;
		}

		.button:hover:before,
		.button:focus:before {
			opacity: 0;
			transform: scale(0.7);
			transition: opacity 0.4s cubic-bezier(0.165, 0.84, 0.44, 1),
				transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
		}

		.button:hover:after,
		.button:focus:after {
			opacity: 1;
			transform: scale(1);
			transition: opacity 0.4s cubic-bezier(0.77, 0, 0.175, 1) 80ms,
				transform 0.5s cubic-bezier(0.455, 0.03, 0.515, 0.955) 80ms;
		}

		.button-box {
			display: flex;
			position: absolute;
			top: 0;
			left: 0;
		}

		.button-elem {
			display: block;
			width: 20px;
			height: 20px;
			margin: 17px 18px 0 18px;
			transform: rotate(180deg);
			fill: #f0eeef;
		}

		.button:hover .button-box,
		.button:focus .button-box {
			transition: 0.4s;
			transform: translateX(-56px);
		}

		.indicator {
			display: flex;
			gap: 0.8rem;

			span {
				font-size: 2rem;
				cursor: pointer;
				user-select: none;
				color: rgba(255, 255, 255, 0.5);
				transition: color 0.3s ease;

				&.active {
					color: white;
				}

				&:hover,
				&:focus {
					color: #61dafb;
					outline: none;
				}
			}
		}
	}
}
